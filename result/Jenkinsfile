pipeline {
	agent none

    stages {
        stage('build') {
	    	agent {
				docker {
					image 'node:8.16.0-alpine'
				}
			}
			when {
				changeset "**/result/**"
			}
            steps {
                echo 'Compiling result app'
				dir('result') {
					sh 'npm install'
				}
            }
        }
        stage('test') {
		    agent {
				docker {
					image 'node:8.16.0-alpine'
				}
			}
			when {
				changeset "**/result/**"
			}
            steps {
                echo 'Running Unit Test on result app'
				dir('result') {
					sh 'npm install'
					sh 'npm test'
				}
            }
        }
		stage('docker-package') {
			agent any
			when {
				branch 'master'
				changeset "**/result/**"
			}
            steps {
                echo 'Packaging result app with docker'
				script {
					docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
						def resultImage = docker.build("jackmontyorg/result:v${env.BUILD_ID}", "./result")
						resultImage.push()
						resultImage.push("${env.BRANCH_NAME}")
					}
				}
            }
        }
    }
    post {
        always {
			echo 'Pipeline for result is complete ... '
        }
        failure {
			slackSend ( channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success {
			slackSend ( channel: "instavote-cd", message: "Build Success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
